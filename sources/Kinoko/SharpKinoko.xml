<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kinoko</name>
    </assembly>
    <members>
        <member name="T:DustInTheWind.Kinoko.IKinokoContext">
            <summary>
            Measures the time needed to run the provided subjects. The measurement is performed multiple times and an
            average is calculated.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.IKinokoContext.Run(DustInTheWind.Kinoko.KinokoTask,System.Int32)">
            <summary>
            Runs the task multiple times and measures the time intervals spent.
            </summary>
            <param name="task">The kinoko task to be run.</param>
            <param name="repeatCount">Specifies the number of times to repeat the measurement.</param>
            <returns>A <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> object containing the measured data and the calculated values.</returns>
            <remarks>
            After the measurements are finished, additional values (for example the average) are calculated from the measured data.
            </remarks>
        </member>
        <member name="M:DustInTheWind.Kinoko.IKinokoContext.Run(DustInTheWind.Kinoko.Providers.ITasksProvider,System.Int32)">
            <summary>
            Measures the time spent to run the subjects received from the subjectProvider.
            </summary>
            <param name="tasksProvider">Provides a list of kinoko tasks to be run.</param>
            <param name="repeatCount">Specifies the number of times to repeat the measurement.</param>
            <returns>A list of <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> objects containing the measured data and the calculated values.</returns>
            <exception cref="T:System.ArgumentNullException">Is thrown when the subjectProvider or the repeatCount are <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is thrown when the repeatCount is less then 1.</exception>
        </member>
        <member name="E:DustInTheWind.Kinoko.IKinokoContext.Measuring">
            <summary>
            Event raised before every measuring of a subject.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.IKinokoContext.Measured">
            <summary>
            Event raised after every measuring of a subject.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.IKinokoContext.TaskRunning">
            <summary>
            Event raised before a task is started. A task is represented by the multiple measurements of a subject.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.IKinokoContext.TaskRun">
            <summary>
            Event raised after a task is finished. A task is represented by the multiple measurements of a subject.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.KinokoException">
            <summary>
            Base exception used by "Kinoko" framework.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.KinokoException"/> class.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.KinokoException"/> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.KinokoException"/> class with a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.KinokoException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.KinokoException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:DustInTheWind.Kinoko.KinokoResult">
            <summary>
            Contains the measurements taken by <see cref="T:DustInTheWind.Kinoko.KinokoContext"/> after it measures the subjects.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.KinokoResult.measurements">
            <summary>
            The time measurements of every run of the subject.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.KinokoResult.average">
            <summary>
            The average value in miliseconds of the time measurements.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> class.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoResult.AddMeasurement(System.Double)">
            <summary>
            Adds a new time measurement to the list of time measurements.
            </summary>
            <param name="time">The time measurement value.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoResult.CalculateAverage">
            <summary>
            Calculates the average value of the measurements.
            </summary>
        </member>
        <member name="P:DustInTheWind.Kinoko.KinokoResult.Measurements">
            <summary>
            Gets an array with the time measurements of every run of the subject.
            </summary>
        </member>
        <member name="P:DustInTheWind.Kinoko.KinokoResult.Average">
            <summary>
            Gets the average value in miliseconds of the time measurements.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.KinokoContext">
            <summary>
            Measures the time needed to run the provided subjects. The measurement is performed multiple times and an
            average is calculated.
            The class is not thread safe.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.OnMeasuring(DustInTheWind.Kinoko.MeasuringEventArgs)">
            <summary>
            Raises the <see cref="E:DustInTheWind.Kinoko.KinokoContext.Measuring"/> event.
            </summary>
            <param name="e">An <see cref="T:DustInTheWind.Kinoko.MeasuringEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.OnMeasured(DustInTheWind.Kinoko.MeasuredEventArgs)">
            <summary>
            Raises the <see cref="E:DustInTheWind.Kinoko.KinokoContext.Measured"/> event.
            </summary>
            <param name="e">An <see cref="T:DustInTheWind.Kinoko.MeasuredEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.OnTaskRunning(DustInTheWind.Kinoko.TaskRunningEventArgs)">
            <summary>
            Raises the <see cref="E:DustInTheWind.Kinoko.KinokoContext.TaskRunning"/> event.
            </summary>
            <param name="e">An <see cref="T:DustInTheWind.Kinoko.TaskRunningEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.OnTaskRun(DustInTheWind.Kinoko.TaskRunEventArgs)">
            <summary>
            Raises the <see cref="E:DustInTheWind.Kinoko.KinokoContext.TaskRun"/> event.
            </summary>
            <param name="e">An <see cref="T:DustInTheWind.Kinoko.TaskRunEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.Run(DustInTheWind.Kinoko.KinokoTask,System.Int32)">
            <summary>
            Runs the task multiple times and measures the time intervals spent.
            </summary>
            <param name="task">The kinoko task to be run.</param>
            <param name="repeatCount">Specifies the number of times to repeat the measurement.</param>
            <returns>A <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> object containing the measured data and the calculated values.</returns>
            <remarks>
            After the measurements are finished, additional values (for example the average) are calculated from the measured data.
            </remarks>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.Run(DustInTheWind.Kinoko.Providers.ITasksProvider,System.Int32)">
            <summary>
            Measures the time spent to run the subjects received from the subjectProvider.
            </summary>
            <param name="tasksProvider">Provides a list of kinoko tasks to be run.</param>
            <param name="repeatCount">Specifies the number of times to repeat the measurement.</param>
            <returns>A list of <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> objects containing the measured data and the calculated values.</returns>
            <exception cref="T:System.ArgumentNullException">Is thrown when the subjectProvider or the repeatCount are <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Is thrown when the repeatCount is less then 1.</exception>
        </member>
        <member name="M:DustInTheWind.Kinoko.KinokoContext.RunTaskAndRaiseEvents(DustInTheWind.Kinoko.KinokoTask,System.Int32)">
            <summary>
            Measures the subject and also raises the needed events.
            The additional values are calculated from the measured data.
            </summary>
            <returns>A <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> object containing the measured data.</returns>
            <param name="task">The kinoko task to be run.</param>
            <param name="repeatCount">The number of times to repeat the measurement.</param>
        </member>
        <member name="E:DustInTheWind.Kinoko.KinokoContext.Measuring">
            <summary>
            Event raised before every measuring of a subject.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.KinokoContext.Measured">
            <summary>
            Event raised after every measuring of a subject.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.KinokoContext.TaskRunning">
            <summary>
            Event raised before a task is started. A task is represented by the multiple measurements of a subject.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.KinokoContext.TaskRun">
            <summary>
            Event raised after a task is finished. A task is represented by the multiple measurements of a subject.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.Utils.Math">
            <summary>
            Provides methods to calculate some mathematical values like the average.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.Utils.Math.Average(System.Double[])">
            <summary>
            Calculates the average of the specified values.
            </summary>
            <param name="values">An array of values for which to calculate the average.</param>
            <returns>The average value.</returns>
        </member>
        <member name="M:DustInTheWind.Kinoko.Utils.Math.Average(System.Collections.Generic.IList{System.Double})">
            <summary>
            Calculates the average of the specified values.
            </summary>
            <param name="values">A list of values for which to calculate the average.</param>
            <returns>The average value.</returns>
        </member>
        <member name="M:DustInTheWind.Kinoko.Utils.Math.Average(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Calculates the average of the specified values.
            </summary>
            <param name="values">An enumeration of values for which to calculate the average.</param>
            <returns>The average value.</returns>
        </member>
        <member name="T:DustInTheWind.Kinoko.MeasuringEventArgs">
            <summary>
            Provides data for <see cref="E:DustInTheWind.Kinoko.KinokoContext.Measuring"/> event.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.MeasuringEventArgs.stepIndex">
            <summary>
            The index of the current measurement.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.MeasuringEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.MeasuringEventArgs"/> class.
            </summary>
            <param name="stepIndex">The index of the current measurement.</param>
        </member>
        <member name="P:DustInTheWind.Kinoko.MeasuringEventArgs.StepIndex">
            <summary>
            Gets the index of the current measurement.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.MeasuredEventArgs">
            <summary>
            Provides data for <see cref="E:DustInTheWind.Kinoko.KinokoContext.Measured"/> event.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.MeasuredEventArgs.stepIndex">
            <summary>
            The index of the current measurement.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.MeasuredEventArgs.time">
            <summary>
            The measured time in miliseconds.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.MeasuredEventArgs.#ctor(System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.MeasuredEventArgs"/> class.
            </summary>
            <param name="stepIndex">The index of the current measurement.</param>
            <param name="time">The measured time in miliseconds.</param>
        </member>
        <member name="P:DustInTheWind.Kinoko.MeasuredEventArgs.StepIndex">
            <summary>
            Gets the index of the current measurement.
            </summary>
        </member>
        <member name="P:DustInTheWind.Kinoko.MeasuredEventArgs.Time">
            <summary>
            Gets the measured time in miliseconds.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.TaskRunningEventArgs">
            <summary>
            Provides data for <see cref="E:DustInTheWind.Kinoko.KinokoContext.TaskRunning"/> event.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.TaskRunningEventArgs.task">
            <summary>
            The task that is about to be run.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.TaskRunningEventArgs.#ctor(DustInTheWind.Kinoko.KinokoTask)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.TaskRunningEventArgs"/> class.
            </summary>
            <param name="task">The task that is about to be run.</param>
        </member>
        <member name="P:DustInTheWind.Kinoko.TaskRunningEventArgs.Task">
            <summary>
            Gets the task that is about to be run.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.KinokoSubject">
            <summary>
            Represents the subject method that is measured by <see cref="T:DustInTheWind.Kinoko.KinokoContext"/>.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.Measurer">
            <summary>
            This class is used to measure a kinoko subject.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.Measurer.subject">
            <summary>
            The subject that is tested by the current instance.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.Measurer.repeatCount">
            <summary>
            The number of times the measurements are performed. (To minimize the measurement errors.)
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.Measurer.OnMeasuring(DustInTheWind.Kinoko.MeasuringEventArgs)">
            <summary>
            Raises the <see cref="E:DustInTheWind.Kinoko.Measurer.Measuring"/> event.
            </summary>
            <param name="e">An <see cref="T:DustInTheWind.Kinoko.MeasuringEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.Measurer.OnMeasured(DustInTheWind.Kinoko.MeasuredEventArgs)">
            <summary>
            Raises the <see cref="E:DustInTheWind.Kinoko.Measurer.Measured"/> event.
            </summary>
            <param name="e">An <see cref="T:DustInTheWind.Kinoko.MeasuredEventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.Measurer.#ctor(DustInTheWind.Kinoko.KinokoSubject,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.Measurer"/> class with
            the subject that is to be measured and
            the number of times the measurement should be performed.
            </summary>
            <param name="subject">The subject that is to be measured.</param>
            <param name="repeatCount">The number of times the measurement is performed.</param>
            <exception cref="T:System.ArgumentNullException">It is thrown if the subject is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the repeatCount value is less then 1.</exception>
        </member>
        <member name="M:DustInTheWind.Kinoko.Measurer.Run">
            <summary>
            Runs the subject multiple times and measures the time intervals spent.
            </summary>
            <returns>A <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> containing the measuremets.</returns>
        </member>
        <member name="M:DustInTheWind.Kinoko.Measurer.PerformMeasurementAndRaiseEvents(System.Int32)">
            <summary>
            Performs one measurement and also raises the <see cref="E:DustInTheWind.Kinoko.Measurer.Measuring"/> and <see cref="E:DustInTheWind.Kinoko.Measurer.Measured"/> events.
            </summary>
            <returns>
            The measured time in miliseconds.
            </returns>
            <param name="measurementIndex">The index representing the number of times the measurement is performing.</param>
        </member>
        <member name="M:DustInTheWind.Kinoko.Measurer.PerformMeasurement">
            <summary>
            Performs the measurement of the subject.
            </summary>
            <returns>The measured time in miliseconds.</returns>
        </member>
        <member name="P:DustInTheWind.Kinoko.Measurer.Subject">
            <summary>
            Gets the subject that is tested by the current instance.
            </summary>
        </member>
        <member name="P:DustInTheWind.Kinoko.Measurer.RepeatCount">
            <summary>
            Gets or sets the number of times the measurements are performed. The subject should be run multiple
            times to minimize the measurement errors.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.Measurer.Measuring">
            <summary>
            Event raised before starting a measurement.
            </summary>
        </member>
        <member name="E:DustInTheWind.Kinoko.Measurer.Measured">
            <summary>
            Event raised after every measurement.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.TaskRunEventArgs">
            <summary>
            Provides data for <see cref="E:DustInTheWind.Kinoko.KinokoContext.TaskRunning"/> event.
            </summary>
        </member>
        <member name="F:DustInTheWind.Kinoko.TaskRunEventArgs.result">
            <summary>
            The result produced after the measurement.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.TaskRunEventArgs.#ctor(DustInTheWind.Kinoko.KinokoResult)">
            <summary>
            Initializes a new instance of the <see cref="T:DustInTheWind.Kinoko.TaskRunEventArgs"/> class.
            </summary>
            <param name="result">The result produced after the measurement.</param>
        </member>
        <member name="P:DustInTheWind.Kinoko.TaskRunEventArgs.Result">
            <summary>
            Gets the result produced after the measurement.
            </summary>
            <value>A <see cref="T:DustInTheWind.Kinoko.KinokoResult"/> object.</value>
        </member>
        <member name="T:DustInTheWind.Kinoko.KinokoTaskAttribute">
            <summary>
            Used to mark the methods that should be measured by Kinoko.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.KinokoTask">
            <summary>
            Represents a task to be run by kinoko.
            It includes the method to be tested and some other meta information.
            </summary>
        </member>
        <member name="P:DustInTheWind.Kinoko.KinokoTask.Category">
            <summary>
            Gets or sets the name of the category.
            </summary>
        </member>
        <member name="P:DustInTheWind.Kinoko.KinokoTask.Subject">
            <summary>
            Gets or sets the subject to be tested.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider">
            <summary>
            Searches through an assembly for methods marked with <see cref="T:DustInTheWind.Kinoko.KinokoTaskAttribute"/> attribute.
            </summary>
        </member>
        <member name="T:DustInTheWind.Kinoko.Providers.ITasksProvider">
            <summary>
            Provides a list of kinoko tasks to be run by <see cref="T:DustInTheWind.Kinoko.KinokoContext"/>.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.Providers.ITasksProvider.GetKinokoTasks">
            <summary>
            Returns a list of <see cref="T:DustInTheWind.Kinoko.KinokoTask"/>s for all methods that are marked as kinoko subjects.
            </summary>
            <returns>A list of <see cref="T:DustInTheWind.Kinoko.KinokoTask"/> objects.</returns>
        </member>
        <member name="F:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider.assembly">
            <summary>
            The assembly into which to search for kinoko subjects.
            </summary>
        </member>
        <member name="M:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider.Load(System.Reflection.Assembly)">
            <summary>
            Load the assembly into which to search for kinoko subjects.
            </summary>
            <param name="assembly">The assembly into which to search for kinoko subjects.</param>
            <exception cref="T:System.ArgumentNullException">Is thrown when the assembly is <see langword="null"/>.</exception>
        </member>
        <member name="M:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider.GetKinokoTasks">
            <summary>
            Returns a list of <see cref="T:DustInTheWind.Kinoko.KinokoTask"/>s for all methods that are marked as kinoko subjects.
            </summary>
            <returns>A list of <see cref="T:DustInTheWind.Kinoko.KinokoTask"/> objects.</returns>
        </member>
        <member name="M:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider.SearchForAllValidMethods">
            <summary>
            Searches for kinoko subject methods into the assembly.
            </summary>
            <returns>A list of <see cref="T:System.Reflection.MethodInfo"/> representing the subject methods.</returns>
        </member>
        <member name="M:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider.CreateKinokoTask(System.Reflection.MethodInfo)">
            <summary>
            Creates a <see cref="T:DustInTheWind.Kinoko.KinokoTask"/> object for the specified method.
            </summary>
            <param name="method">The method for which to create the task.</param>
            <returns>A <see cref="T:DustInTheWind.Kinoko.KinokoTask"/> object.</returns>
        </member>
        <member name="M:DustInTheWind.Kinoko.Providers.AssemblyTasksProvider.CreateKinokoSubject(System.Reflection.MethodInfo)">
            <summary>
            Creates a <see cref="T:DustInTheWind.Kinoko.KinokoSubject"/> delegete for the specified method.
            </summary>
            <param name="method">The method for which to create the delegate.</param>
            <returns>A <see cref="T:DustInTheWind.Kinoko.KinokoSubject"/> delegate.</returns>
        </member>
    </members>
</doc>
